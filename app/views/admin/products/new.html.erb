<% content_for :page_title, "商品を追加" %>

<style>
    /* 商品フォームのスタイル */
    .admin-product-form {
        padding: 2rem;
        max-width: 1600px;
        margin: 0 auto;
    }

    .form-header {
        margin-bottom: 2rem;
    }

    .back-link {
        display: inline-flex;
        align-items: center;
        gap: 0.5rem;
        color: var(--admin-text-secondary);
        text-decoration: none;
        margin-bottom: 1rem;
        transition: color 0.2s ease;
    }

    .back-link:hover {
        color: var(--admin-accent);
    }

    .back-icon {
        transition: transform 0.2s ease;
    }

    .back-link:hover .back-icon {
        transform: translateX(-3px);
    }

    .form-title {
        color: var(--admin-text);
        font-size: 2rem;
        font-weight: 700;
        margin: 0;
    }

    .product-form {
        display: block;
    }

    .form-layout {
        display: grid;
        grid-template-columns: 1fr 260px;
        gap: 1rem;
    }

    .form-main {
        display: flex;
        flex-direction: column;
        gap: 2rem;
    }

    .form-sidebar {
        display: flex;
        flex-direction: column;
        gap: 1.5rem;
    }

    .required-badge {
        display: inline-block;
        padding: 0.125rem 0.5rem;
        background-color: var(--admin-error);
        color: #ff0000;
        font-size: 0.75rem;
        font-weight: 600;
        border-radius: 4px;
        margin-left: 0.5rem;
    }

    /* 画像アップロード */
    .image-upload-container {
        display: flex;
        flex-direction: column;
        gap: 1rem;
    }

    .image-preview {
        width: 35%;
        aspect-ratio: 1;
        border-radius: 8px;
        overflow: hidden;
        background-color: var(--admin-bg-secondary);
        border: 2px dashed var(--admin-border);
    }

    .preview-image {
        width: 100%;
        height: 100%;
        object-fit: cover;
    }

    .preview-placeholder {
        width: 100%;
        height: 100%;
        display: flex;
        flex-direction: column;
        align-items: center;
        justify-content: center;
        color: var(--admin-text-muted);
    }

    .placeholder-icon {
        width: 4rem;
        height: 4rem;
        margin-bottom: 0.5rem;
    }

    .upload-controls {
        display: flex;
        gap: 0.75rem;
        flex-wrap: wrap;
    }

    .file-input {
        display: none;
    }

    .upload-btn {
        flex: 1;
        justify-content: center;
    }

    .upload-note {
        color: var(--admin-text-muted);
        font-size: 0.875rem;
        margin: 0;
    }

    /* 価格入力 */
    .price-input-wrapper {
        position: relative;
        display: flex;
        align-items: center;
    }

    .currency-symbol {
        position: absolute;
        left: 1rem;
        color: var(--admin-text-secondary);
        font-weight: 600;
        font-size: 1.125rem;
    }

    .price-input {
        padding-left: 2.5rem !important;
    }

    /* リッチテキストエディタ */
    .admin-rich-text {
        min-height: 300px;
    }

    trix-toolbar {
        background-color: var(--admin-bg-secondary);
        border: 1px solid var(--admin-border);
        border-bottom: none;
        border-radius: 8px 8px 0 0;
        padding: 0.75rem;
    }

    trix-toolbar .trix-button-group {
        background-color: var(--admin-bg-card);
        border: 1px solid var(--admin-border);
        border-radius: 6px;
        margin-right: 0.5rem;
    }

    trix-toolbar .trix-button {
        border: none;
        background-color: transparent;
        color: var(--admin-text-secondary);
        transition: all 0.2s ease;
    }

    trix-toolbar .trix-button:hover {
        background-color: var(--admin-bg-hover);
        color: var(--admin-text);
    }

    trix-toolbar .trix-button.trix-active {
        background-color: var(--admin-primary);
        color: white;
    }

    trix-editor {
        background-color: var(--admin-bg-secondary);
        border: 1px solid var(--admin-border);
        border-radius: 0 0 8px 8px;
        color: var(--admin-text);
        padding: 1rem;
        min-height: 300px;
    }

    trix-editor:focus {
        outline: none;
        border-color: var(--admin-accent);
        box-shadow: 0 0 0 3px rgba(59, 130, 246, 0.1);
    }

    /* トグルスイッチ */
    .toggle-group {
        display: flex;
        flex-direction: column;
        gap: 1.5rem;
    }

    .toggle-item {
        display: flex;
        flex-direction: column;
        gap: 0.5rem;
    }

    .toggle-label {
        display: flex;
        justify-content: space-between;
        align-items: center;
        cursor: pointer;
    }

    .toggle-title {
        color: var(--admin-text);
        font-weight: 500;
    }

    .toggle-switch {
        position: relative;
        width: 3rem;
        height: 1.75rem;
    }

    .toggle-checkbox {
        opacity: 0;
        width: 0;
        height: 0;
        position: absolute;
    }

    .toggle-slider {
        position: absolute;
        cursor: pointer;
        top: 0;
        left: 0;
        right: 0;
        bottom: 0;
        background-color: var(--admin-bg-secondary);
        border: 2px solid var(--admin-border);
        transition: 0.3s;
        border-radius: 9999px;
    }

    .toggle-slider:before {
        position: absolute;
        content: "";
        height: 1.125rem;
        width: 1.125rem;
        left: 0.125rem;
        bottom: 0.125rem;
        background-color: var(--admin-text-muted);
        transition: 0.3s;
        border-radius: 50%;
    }

    .toggle-checkbox:checked+.toggle-slider {
        background-color: var(--admin-success);
        border-color: var(--admin-success);
    }

    .toggle-checkbox:checked+.toggle-slider:before {
        transform: translateX(1.25rem);
        background-color: white;
    }

    .toggle-description {
        color: var(--admin-text-secondary);
        font-size: 0.875rem;
        margin: 0;
    }

    /* アクションボタン */
    .action-buttons {
        display: flex;
        flex-direction: column;
        gap: 0.75rem;
    }

    .action-buttons .admin-btn {
        justify-content: center;
        width: 100%;
    }

    @media (max-width: 1024px) {
        .form-layout {
            grid-template-columns: 1fr;
        }

        .form-sidebar {
            order: -1;
        }
    }

    @media (max-width: 768px) {
        .admin-product-form {
            padding: 1rem;
        }

        .form-title {
            font-size: 1.5rem;
        }
    }
</style>

<div class="admin-product-form">
    <div class="form-header">
        <%= link_to admin_products_path, class: "back-link" do %>
        <svg class="back-icon" fill="none" stroke="currentColor" viewBox="0 0 24 24" width="20" height="20">
            <path stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="M10 19l-7-7m0 0l7-7m-7 7h18"></path>
        </svg>
        商品一覧に戻る
        <% end %>
        <h1 class="form-title">商品を追加</h1>
    </div>

    <%= form_with model: [:admin, @product], local: true, class: "product-form", multipart: true do |f| %>
    <% if @product.errors.any? %>
    <div class="admin-alert admin-alert-error">
        <strong><%= pluralize(@product.errors.count, "件") %>のエラーがあります:</strong>
        <ul style="margin: 0.5rem 0 0 0; padding-left: 1.5rem;">
            <% @product.errors.full_messages.each do |message| %>
            <li><%= message %></li>
            <% end %>
        </ul>
    </div>
    <% end %>

    <div class="form-layout">
        <!-- 左カラム：メイン情報 -->
        <div class="form-main">
            <!-- 商品画像 -->
            <div class="admin-card">
                <div class="admin-card-header">
                    <h2 class="admin-card-title">
                        <svg style="width: 1.5rem; height: 1.5rem; display: inline-block; vertical-align: middle;" fill="none" stroke="currentColor" viewBox="0 0 24 24">
                            <path stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="M4 16l4.586-4.586a2 2 0 012.828 0L16 16m-2-2l1.586-1.586a2 2 0 012.828 0L20 14m-6-6h.01M6 20h12a2 2 0 002-2V6a2 2 0 00-2-2H6a2 2 0 00-2 2v12a2 2 0 002 2z"></path>
                        </svg>
                        商品画像 <span class="required-badge">必須</span>
                    </h2>
                </div>
                <div class="admin-card-body">
                    <div class="image-upload-container">
                        <div class="image-preview" id="image-preview">
                            <div class="preview-placeholder" id="preview-placeholder">
                                <svg class="placeholder-icon" fill="none" stroke="currentColor" viewBox="0 0 24 24">
                                    <path stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="M4 16l4.586-4.586a2 2 0 012.828 0L16 16m-2-2l1.586-1.586a2 2 0 012.828 0L20 14m-6-6h.01M6 20h12a2 2 0 002-2V6a2 2 0 00-2-2H6a2 2 0 00-2 2v12a2 2 0 002 2z"></path>
                                </svg>
                                <p>画像をアップロードしてください</p>
                            </div>
                        </div>

                        <div class="upload-controls">
                            <%= f.file_field :image, 
                                 accept: "image/*", 
                                 class: "file-input", 
                                 id: "image-input",
                                 onchange: "previewImage(event)",
                                 required: true %>
                            <label for="image-input" class="admin-btn admin-btn-secondary upload-btn">
                                <svg style="width: 1.25rem; height: 1.25rem;" fill="none" stroke="currentColor" viewBox="0 0 24 24">
                                    <path stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="M7 16a4 4 0 01-.88-7.903A5 5 0 1115.9 6L16 6a5 5 0 011 9.9M15 13l-3-3m0 0l-3 3m3-3v12"></path>
                                </svg>
                                画像を選択
                            </label>
                        </div>
                        <p class="upload-note">推奨: 正方形の画像（例: 800x800px）、最大5MB</p>
                    </div>
                </div>
            </div>

            <!-- 基本情報 -->
            <div class="admin-card">
                <div class="admin-card-header">
                    <h2 class="admin-card-title">
                        <svg style="width: 1.5rem; height: 1.5rem; display: inline-block; vertical-align: middle;" fill="none" stroke="currentColor" viewBox="0 0 24 24">
                            <path stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="M13 16h-1v-4h-1m1-4h.01M21 12a9 9 0 11-18 0 9 9 0 0118 0z"></path>
                        </svg>
                        基本情報
                    </h2>
                </div>
                <div class="admin-card-body">
                    <div class="admin-form-group">
                        <%= f.label :name, class: "admin-form-label" do %>
                        商品名 <span class="required-badge">必須</span>
                        <% end %>
                        <%= f.text_field :name, 
                               class: "admin-form-control", 
                               placeholder: "例: もちパイ（6個入り）",
                               required: true %>
                    </div>

                    <div class="admin-form-group">
                        <%= f.label :price, class: "admin-form-label" do %>
                        価格 <span class="required-badge">必須</span>
                        <% end %>
                        <div class="price-input-wrapper">
                            <span class="currency-symbol">¥</span>
                            <%= f.number_field :price, 
                                   class: "admin-form-control price-input", 
                                   placeholder: "1000",
                                   min: 0,
                                   step: 1,
                                   required: true %>
                        </div>
                    </div>
                </div>
            </div>

            <!-- 商品説明 -->
            <div class="admin-card">
                <div class="admin-card-header">
                    <h2 class="admin-card-title">
                        <svg style="width: 1.5rem; height: 1.5rem; display: inline-block; vertical-align: middle;" fill="none" stroke="currentColor" viewBox="0 0 24 24">
                            <path stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="M4 6h16M4 12h16M4 18h7"></path>
                        </svg>
                        商品説明 <span class="required-badge">必須</span>
                    </h2>
                </div>
                <div class="admin-card-body">
                    <%= f.rich_text_area :description, 
                                 class: "admin-rich-text",
                                 placeholder: "商品の詳しい説明を入力してください..." %>
                </div>
            </div>
        </div>

        <!-- 右カラム：設定 -->
        <div class="form-sidebar">
            <!-- 公開設定 -->
            <div class="admin-card">
                <div class="admin-card-header">
                    <h2 class="admin-card-title">公開設定</h2>
                </div>
                <div class="admin-card-body">
                    <div class="toggle-group">
                        <div class="toggle-item">
                            <label class="toggle-label">
                                <span class="toggle-title">公開状態</span>
                                <div class="toggle-switch">
                                    <%= f.check_box :visible, class: "toggle-checkbox", id: "visible-toggle" %>
                                    <span class="toggle-slider"></span>
                                </div>
                            </label>
                            <p class="toggle-description">オンにすると、お客様がこの商品を閲覧できます</p>
                        </div>
                    </div>
                </div>
            </div>

            <!-- カテゴリー設定 -->
            <div class="admin-card">
                <div class="admin-card-header">
                    <h2 class="admin-card-title">カテゴリー</h2>
                </div>
                <div class="admin-card-body">
                    <div class="toggle-group">
                        <div class="toggle-item">
                            <label class="toggle-label">
                                <span class="toggle-title">おすすめ商品</span>
                                <div class="toggle-switch">
                                    <%= f.check_box :featured, class: "toggle-checkbox", id: "featured-toggle" %>
                                    <span class="toggle-slider"></span>
                                </div>
                            </label>
                            <p class="toggle-description">「おすすめ商品」ページに表示</p>
                        </div>

                        <div class="toggle-item">
                            <label class="toggle-label">
                                <span class="toggle-title">季節限定商品</span>
                                <div class="toggle-switch">
                                    <%= f.check_box :seasonal, class: "toggle-checkbox", id: "seasonal-toggle" %>
                                    <span class="toggle-slider"></span>
                                </div>
                            </label>
                            <p class="toggle-description">「季節限定商品」ページに表示</p>
                        </div>
                    </div>
                </div>
            </div>

            <!-- アクションボタン -->
            <div class="action-buttons">
                <%= f.submit "保存", 
                       class: "admin-btn admin-btn-secondary",
                       name: "draft",
                       value: "下書き" %>

                <%= f.submit "商品を追加", 
                       class: "admin-btn admin-btn-success",
                       name: "publish",
                       value: "公開" %>
            </div>
        </div>
    </div>
    <% end %>
</div>

<script>
    // 画像プレビュー
    function previewImage(event) {
        const file = event.target.files[0];
        const preview = document.getElementById('image-preview');

        if (file) {
            const reader = new FileReader();
            reader.onload = function(e) {
                preview.innerHTML = `<img src="${e.target.result}" class="preview-image" id="preview-img" alt="Preview">`;
            };
            reader.readAsDataURL(file);
        }
    }
</script>