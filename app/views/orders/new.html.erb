<% content_for :title, "冷凍もちパイ発送 - うさぎや" %>

<style>
    * {
        margin: 0;
        padding: 0;
        box-sizing: border-box;
    }

    html {
        scroll-behavior: smooth;
    }

    body {
        font-family: 'Hiragino Kaku Gothic Pro', 'ヒラギノ角ゴ Pro W3', 'メイリオ', Meiryo, sans-serif;
        line-height: 1.8;
        color: #333;
        background-color: #fff;
    }

    /* ヘッダーと被らないようにトップマージンを確保 */
    .frozen-mochi-pie-section {
        margin-top: 100px;
        padding: 40px 20px;
        max-width: 1200px;
        margin-left: auto;
        margin-right: auto;
    }

    /* タイトルとボタンのヘッダー部分 */
    .section-header {
        display: flex;
        justify-content: space-between;
        align-items: center;
        margin-bottom: 50px;
        flex-wrap: wrap;
        gap: 20px;
    }

    .section-title {
        font-size: 32px;
        font-weight: bold;
        color: #333;
    }

    .order-button {
        padding: 15px 40px;
        background-color: #fff;
        border: 2px solid #333;
        font-size: 16px;
        font-weight: bold;
        cursor: pointer;
        text-decoration: none;
        color: #333;
        display: inline-block;
        transition: all 0.3s ease;
    }

    .order-button:hover {
        background-color: #ff99a9;
        color: #fff;
    }

    /* コンテンツエリア */
    .content-wrapper {
        display: flex;
        gap: 60px;
        align-items: flex-start;
        margin-bottom: 60px;
    }

    .text-content {
        flex: 1;
        min-width: 0;
    }

    .description-text {
        font-size: 16px;
        line-height: 2.2;
        margin-bottom: 40px;
    }

    .description-text p {
        margin-bottom: 20px;
    }

    .image-content {
        flex: 0 0 400px;
        max-width: 400px;
    }

    .image-content img {
        width: 100%;
        height: auto;
        display: block;
    }

    /* もちパイ発送の流れセクション */
    .flow-section {
        margin-top: 50px;
    }

    .flow-title {
        font-size: 24px;
        font-weight: bold;
        margin-bottom: 30px;
    }

    .flow-content {
        display: flex;
        gap: 60px;
        align-items: flex-start;
    }

    .flow-steps {
        flex: 1;
        min-width: 0;
    }

    .flow-step {
        display: flex;
        align-items: flex-start;
        margin-bottom: 15px;
        font-size: 16px;
        line-height: 1.8;
    }

    .flow-arrow {
        margin: 5px 0;
        margin-left: 12px;
        font-size: 18px;
    }

    .flow-image {
        flex: 0 0 380px;
        max-width: 380px;
    }

    .flow-image img {
        width: 100%;
        height: auto;
        display: block;
    }

    .expiry-note {
        margin-top: 30px;
        font-size: 14px;
        line-height: 1.8;
    }

    /* 注文フォームスタイル */
    .order-form-section {
        margin-top: 80px;
        padding: 50px 40px;
        background-color: #f9f9f9;
        border-radius: 8px;
        scroll-margin-top: 120px;
    }

    .order-form-title {
        font-size: 28px;
        font-weight: bold;
        margin-bottom: 40px;
        text-align: center;
        color: #333;
    }

    .form-group {
        margin-bottom: 30px;
        scroll-margin-top: 120px;
    }

    .form-label {
        display: block;
        font-size: 16px;
        font-weight: bold;
        margin-bottom: 10px;
        color: #333;
    }

    .required {
        color: #d32f2f;
        font-size: 14px;
        margin-left: 5px;
    }

    .form-input,
    .form-textarea,
    .form-select {
        width: 100%;
        padding: 12px 15px;
        font-size: 16px;
        border: 1px solid #ddd;
        border-radius: 4px;
        background-color: #fff;
        transition: border-color 0.3s ease;
    }

    .form-input:focus,
    .form-textarea:focus,
    .form-select:focus {
        outline: none;
        border-color: #333;
    }

    .form-textarea {
        min-height: 120px;
        resize: vertical;
    }

    .postal-code-group {
        display: flex;
        gap: 10px;
        align-items: center;
    }

    .postal-code-input {
        flex: 1;
    }

    .radio-group,
    .checkbox-group {
        display: flex;
        flex-direction: column;
        gap: 12px;
    }

    .radio-item,
    .checkbox-item {
        display: flex;
        align-items: center;
        gap: 10px;
    }

    .radio-item input[type="radio"],
    .checkbox-item input[type="checkbox"] {
        width: 18px;
        height: 18px;
        cursor: pointer;
    }

    .radio-item label,
    .checkbox-item label {
        font-size: 15px;
        cursor: pointer;
        color: #333;
    }

    .shipping-address-fields {
        display: none;
        margin-top: 20px;
        padding: 20px;
        background-color: #fff;
        border: 1px solid #ddd;
        border-radius: 4px;
    }

    .shipping-address-fields.active {
        display: block;
    }

    .product-order-section {
        display: grid;
        grid-template-columns: repeat(auto-fill, minmax(300px, 1fr));
        gap: 20px;
    }

    .product-item {
        display: flex;
        align-items: center;
        justify-content: space-between;
        padding: 15px;
        background-color: #fff;
        border: 1px solid #ddd;
        border-radius: 4px;
    }

    .product-name {
        font-size: 15px;
        font-weight: 500;
    }

    .product-quantity {
        display: flex;
        align-items: center;
        gap: 10px;
    }

    .quantity-input {
        width: 80px;
        padding: 8px;
        text-align: center;
        font-size: 16px;
        border: 1px solid #ddd;
        border-radius: 4px;
    }

    .total-section {
        margin-top: 20px;
        padding: 20px;
        background-color: #fff;
        border: 2px solid #333;
        border-radius: 4px;
        text-align: right;
    }

    .total-label {
        font-size: 20px;
        font-weight: bold;
        color: #333;
    }

    .total-amount {
        font-size: 28px;
        font-weight: bold;
        color: #d32f2f;
        margin-left: 20px;
    }

    .form-note {
        font-size: 13px;
        color: #666;
        margin-top: 5px;
        line-height: 1.6;
    }

    .error-messages {
        background-color: #fee;
        border: 2px solid #d32f2f;
        border-radius: 4px;
        padding: 20px;
        margin-bottom: 30px;
    }

    .error-messages h3 {
        color: #d32f2f;
        font-size: 18px;
        font-weight: bold;
        margin-bottom: 15px;
    }

    .error-messages ul {
        list-style: none;
        padding: 0;
        margin: 0;
    }

    .error-messages li {
        margin-bottom: 8px;
    }

    .error-messages a {
        color: #d32f2f;
        text-decoration: none;
        font-size: 14px;
        padding-left: 20px;
        position: relative;
        display: block;
        cursor: pointer;
    }

    .error-messages a:hover {
        text-decoration: underline;
    }

    .error-messages a:before {
        content: "•";
        position: absolute;
        left: 5px;
    }

    .field_with_errors {
        display: inline;
    }

    .field_with_errors .form-input,
    .field_with_errors .form-textarea,
    .field_with_errors .form-select {
        border-color: #d32f2f;
        background-color: #fff5f5;
    }

    .error-message {
        color: #d32f2f;
        font-size: 13px;
        margin-top: 5px;
        display: block;
    }

    .submit-button {
        width: 100%;
        padding: 18px;
        font-size: 18px;
        font-weight: bold;
        color: #333;
        background-color: #fff;
        border: 2px solid #333;
        border-radius: 4px;
        cursor: pointer;
        transition: background-color 0.3s ease;
        margin-top: 40px;
    }

    .submit-button:hover {
        background-color: #ff99a9;
        color: #fff;
    }

    /* レスポンシブ対応 */
    @media screen and (max-width: 1024px) {

        .content-wrapper,
        .flow-content {
            flex-direction: column;
            gap: 40px;
        }

        .image-content,
        .flow-image {
            flex: 1;
            max-width: 100%;
        }

        .section-title {
            font-size: 28px;
        }
    }

    @media screen and (max-width: 768px) {
        .frozen-mochi-pie-section {
            margin-top: 80px;
            padding: 30px 15px;
        }

        .section-header {
            flex-direction: column;
            align-items: flex-start;
        }

        .section-title {
            font-size: 24px;
        }

        .order-button {
            width: 100%;
            text-align: center;
            padding: 12px 30px;
        }

        .description-text,
        .flow-step {
            font-size: 14px;
        }

        .flow-title {
            font-size: 20px;
        }

        .content-wrapper,
        .flow-content {
            gap: 30px;
        }

        .order-form-section {
            padding: 30px 20px;
        }

        .order-form-title {
            font-size: 24px;
        }

        .product-order-section {
            grid-template-columns: 1fr;
        }

        .postal-code-group {
            flex-direction: column;
        }
    }

    @media screen and (max-width: 480px) {
        .frozen-mochi-pie-section {
            margin-top: 70px;
            padding: 20px 10px;
        }

        .section-title {
            font-size: 20px;
        }

        .description-text,
        .flow-step {
            font-size: 13px;
        }
    }
</style>

<div class="frozen-mochi-pie-section">
    <!-- ヘッダー部分 -->
    <div class="section-header">
        <h1 class="section-title">「もちパイ」冷凍発送について</h1>
        <a href="#order-form" class="order-button">注文フォームへ</a>
    </div>

    <!-- メインコンテンツ -->
    <div class="content-wrapper">
        <div class="text-content">
            <div class="description-text">
                <p>当店一番人気の「もちパイ」、作りたてを急速に冷凍し冷凍便でお送りします。</p>

                <p>「もちパイの焼きたてを召し上がっていただきたい」そんな思いで作っています。</p>

                <p>「遠くの方にも召し上がっていただきたい」そんな気持ちも持っています。</p>

                <p>もちパイを作りたて、焼きたてのまま、おいしくお届けできないだろうか...</p>

                <p>...いろいろ考え試行錯誤の末、作りたてを急速に冷凍発送してお送りできるようになりました。</p>
            </div>
        </div>

        <div class="image-content">
            <%= image_tag 'orders/reitoumotipai.png', alt: '冷凍もちパイ' %>
        </div>
    </div>

    <!-- もちパイ発送の流れ -->
    <div class="flow-section">
        <h2 class="flow-title">「もちパイ」発送の流れ</h2>

        <div class="flow-content">
            <div class="flow-steps">
                <div class="flow-step">
                    <span>①うさぎや店舗にてパイで包み焼きあげます</span>
                </div>
                <div class="flow-arrow">↓</div>

                <div class="flow-step">
                    <span>②急速冷凍します</span>
                </div>
                <div class="flow-arrow">↓</div>

                <div class="flow-step">
                    <span>③梱包して発送します</span>
                </div>
                <div class="flow-arrow">↓</div>

                <div class="flow-step">
                    <span>④お客様にお届け</span>
                </div>
                <div class="flow-arrow">↓</div>

                <div class="flow-step">
                    <span>⑤お召し上がりの約2時間前に自然解凍 → ⑥そのままお召し上がりください</span>
                </div>
                <div class="flow-arrow">↓</div>

                <div class="flow-step">
                    <span>⑥トースターで約2~3分焼いてお召し上がりいただくと一層おいしくなります♪</span>
                </div>

                <div class="expiry-note">
                    <p>☆消費期限は解凍前...約20日間</p>
                    <p style="margin-left: 50px;">解凍後...翌日中</p>
                </div>
            </div>

            <div class="flow-image">
                <%= image_tag 'orders/reitou.png', alt: 'もちパイ断面' %>
            </div>
        </div>
    </div>

    <!-- 注文フォーム -->
    <div id="order-form" class="order-form-section">
        <h2 class="order-form-title">ご注文フォーム</h2>

        <%= form_with model: @order, url: orders_path, method: :post, data: { turbo: false } do |f| %>
        <!-- エラーメッセージ表示 -->
        <% if @order.errors.any? %>
        <div class="error-messages">
            <h3><%= @order.errors.count %>個のエラーがあります。内容を確認してください。</h3>
            <ul>
                <% @order.errors.each do |error| %>
                <li>
                    <a href="#order_<%= error.attribute %>" onclick="scrollToField(event, 'order_<%= error.attribute %>')">
                        <%= error.message %>
                    </a>
                </li>
                <% end %>
            </ul>
        </div>
        <% end %>

        <!-- ご注文者様情報 -->
        <div class="form-group">
            <label class="form-label">
                ご注文者様のお名前<span class="required">*必須</span>
            </label>
            <%= f.text_field :customer_name, id: 'order_customer_name', class: 'form-input', placeholder: '山田 太郎' %>
            <% if @order.errors[:customer_name].any? %>
            <span class="error-message"><%= @order.errors[:customer_name].first %></span>
            <% end %>
        </div>

        <div class="form-group">
            <label class="form-label">
                ご注文者様の郵便番号<span class="required">*必須</span>
            </label>
            <div class="postal-code-group">
                <%= f.text_field :customer_postal_code, id: 'order_postal_code', class: 'form-input postal-code-input', placeholder: '916-0071' %>
            </div>
            <% if @order.errors[:postal_code].any? %>
            <span class="error-message"><%= @order.errors[:postal_code].first %></span>
            <% end %>
        </div>

        <div class="form-group">
            <label class="form-label">
                ご注文者様のご住所<span class="required">*必須</span>
            </label>
            <%= f.text_field :customer_address, id: 'order_address', class: 'form-input', placeholder: '福井県鯖江市持明寺町5-10-1' %>
            <% if @order.errors[:address].any? %>
            <span class="error-message"><%= @order.errors[:address].first %></span>
            <% end %>
        </div>

        <div class="form-group">
            <label class="form-label">
                ご注文者様の電話番号<span class="required">*必須</span>
            </label>
            <%= f.text_field :customer_phone, id: 'order_phone', class: 'form-input', placeholder: '0778-62-0861', type: 'tel' %>
            <% if @order.errors[:phone].any? %>
            <span class="error-message"><%= @order.errors[:phone].first %></span>
            <% end %>
        </div>

        <div class="form-group">
            <label class="form-label">
                E-MAIL<span class="required">*必須</span>
            </label>
            <%= f.email_field :customer_email, id: 'order_email', class: 'form-input', placeholder: 'usagiya-oishi@gmail.com' %>
            <% if @order.errors[:email].any? %>
            <span class="error-message"><%= @order.errors[:email].first %></span>
            <% end %>
        </div>

        <!-- 送り先選択 -->
        <div class="form-group">
            <label class="form-label">
                送り先<span class="required">*必須</span>
            </label>
            <% 
          current_type = @order.shipping_type
          if current_type.blank?
            current_type = @order.same_address == false ? 'different' : 'same'
          end
        %>
            <div class="radio-group">
                <div class="radio-item">
                    <%= radio_button_tag 'order[shipping_type]', 'same', (current_type == 'same'), id: 'shipping_same' %>
                    <label for="shipping_same">ご注文者様と同じ住所に送る</label>
                </div>
                <div class="radio-item">
                    <%= radio_button_tag 'order[shipping_type]', 'different', (current_type == 'different'), id: 'shipping_different' %>
                    <label for="shipping_different">別の住所に送る</label>
                </div>
            </div>

            <!-- 別の住所への送り先情報 -->
            <div id="shipping-address-fields" class="shipping-address-fields">
                <div style="margin-bottom: 30px;">
                    <label class="form-label">
                        お送り先のお名前<span class="required">*必須</span>
                    </label>
                    <%= f.text_field :shipping_name, id: 'order_delivery_name', class: 'form-input', placeholder: '佐藤 花子' %>
                    <% if @order.errors[:shipping_name].any? || @order.errors[:delivery_name].any? %>
                    <span class="error-message"><%= @order.errors[:shipping_name].first || @order.errors[:delivery_name].first %></span>
                    <% end %>
                </div>

                <div style="margin-bottom: 30px;">
                    <label class="form-label">
                        お送り先の郵便番号<span class="required">*必須</span>
                    </label>
                    <%= f.text_field :shipping_postal_code, id: 'order_delivery_postal_code', class: 'form-input', placeholder: '100-8111' %>
                    <% if @order.errors[:shipping_postal_code].any? || @order.errors[:delivery_postal_code].any? %>
                    <span class="error-message"><%= @order.errors[:shipping_postal_code].first || @order.errors[:delivery_postal_code].first %></span>
                    <% end %>
                </div>

                <div style="margin-bottom: 30px;">
                    <label class="form-label">
                        お送り先の住所<span class="required">*必須</span>
                    </label>
                    <%= f.text_field :shipping_address, id: 'order_delivery_address', class: 'form-input', placeholder: '東京都千代田区○○1-1' %>
                    <% if @order.errors[:shipping_address].any? || @order.errors[:delivery_address].any? %>
                    <span class="error-message"><%= @order.errors[:shipping_address].first || @order.errors[:delivery_address].first %></span>
                    <% end %>
                </div>

                <div>
                    <label class="form-label">
                        お送り先の電話<span class="required">*必須</span>
                    </label>
                    <%= f.text_field :shipping_phone, id: 'order_delivery_phone', class: 'form-input', placeholder: '03-3213-1111', type: 'tel' %>
                    <% if @order.errors[:shipping_phone].any? || @order.errors[:delivery_phone].any? %>
                    <span class="error-message"><%= @order.errors[:shipping_phone].first || @order.errors[:delivery_phone].first %></span>
                    <% end %>
                </div>
            </div>
        </div>

        <!-- 注文商品 -->
        <div class="form-group" id="order_base">
            <label class="form-label">注文商品</label>
            <div class="product-order-section">
                <div class="product-item">
                    <span class="product-name">もちパイ6個入り</span>
                    <div class="product-quantity">
                        <label>数:</label>
                        <%= number_field_tag 'order[products][6pieces]', (@order.products&.dig('6pieces') || 0), class: 'quantity-input', min: 0, data: { price: 1200 } %>
                    </div>
                </div>

                <div class="product-item">
                    <span class="product-name">もちパイ8個入り</span>
                    <div class="product-quantity">
                        <label>数:</label>
                        <%= number_field_tag 'order[products][8pieces]', (@order.products&.dig('8pieces') || 0), class: 'quantity-input', min: 0, data: { price: 1600 } %>
                    </div>
                </div>

                <div class="product-item">
                    <span class="product-name">もちパイ10個入り</span>
                    <div class="product-quantity">
                        <label>数:</label>
                        <%= number_field_tag 'order[products][10pieces]', (@order.products&.dig('10pieces') || 0), class: 'quantity-input', min: 0, data: { price: 2000 } %>
                    </div>
                </div>

                <div class="product-item">
                    <span class="product-name">もちパイ12個入り</span>
                    <div class="product-quantity">
                        <label>数:</label>
                        <%= number_field_tag 'order[products][12pieces]', (@order.products&.dig('12pieces') || 0), class: 'quantity-input', min: 0, data: { price: 2400 } %>
                    </div>
                </div>

                <div class="product-item">
                    <span class="product-name">もちパイ15個入り</span>
                    <div class="product-quantity">
                        <label>数:</label>
                        <%= number_field_tag 'order[products][15pieces]', (@order.products&.dig('15pieces') || 0), class: 'quantity-input', min: 0, data: { price: 3000 } %>
                    </div>
                </div>

                <div class="product-item">
                    <span class="product-name">もちパイ20個入り</span>
                    <div class="product-quantity">
                        <label>数:</label>
                        <%= number_field_tag 'order[products][20pieces]', (@order.products&.dig('20pieces') || 0), class: 'quantity-input', min: 0, data: { price: 4000 } %>
                    </div>
                </div>
            </div>

            <!-- 合計金額 -->
            <div class="total-section">
                <span class="total-label">合計:</span>
                <span id="total-amount" class="total-amount">¥0</span>
            </div>
        </div>

        <!-- 支払い方法 -->
        <div class="form-group">
            <label class="form-label">
                支払い方法<span class="required">*必須</span>
            </label>
            <%= f.select :payment_method, 
            [['クレジットカード払い(VISA / Master / JCB / American Express / ダイナースクラブ)', 'credit_card'], 
             ['代引き(手数料がかかります)', 'cash_on_delivery'], 
             ['福井信用金庫 事前振込(手数料はご負担ください)', 'fukui_bank_transfer'], 
             ['ゆうちょ銀行 事前振込(手数料はご負担ください)', 'yucho_bank_transfer']], 
            { include_blank: '選択してください', selected: @order.payment_method }, 
            { id: 'order_payment_method', class: 'form-select' } %>
            <% if @order.errors[:payment_method].any? %>
            <span class="error-message"><%= @order.errors[:payment_method].first %></span>
            <% end %>
            <p class="form-note">※クレジットカードの場合、リクルートIDの登録後の決済となります。</p>
        </div>

        <!-- 到着希望日 -->
        <div class="form-group">
            <label class="form-label">到着希望日</label>
            <%= f.date_field :delivery_date, class: 'form-input', min: Date.today + 3 %>
            <p class="form-note">
                ※お申込みより5日以降の日にちをご記入ください。<br>
                ご記入がない場合は調整後、最短でのお届けとさせていただきます
            </p>
        </div>

        <!-- 希望到着時間 -->
        <div class="form-group">
            <label class="form-label">希望到着時間</label>
            <%= f.select :delivery_time, 
            [['午前中', 'morning'], 
             ['14~16時', '14-16'], 
             ['16~18時', '16-18'], 
             ['18~20時', '18-20'], 
             ['19~21時', '19-21'], 
             ['時間指定なし', 'no_preference']], 
            { include_blank: '選択してください' }, 
            { class: 'form-select' } %>
        </div>

        <!-- 包装の有無 -->
        <div class="form-group">
            <label class="form-label">
                包装の有無<span class="required">*必須</span>
            </label>
            <%= f.select :wrapping, 
            [['もちパイ・帯のみ(包装なし)', 'no_wrapping'], 
             ['「うさぎや」ロゴデザイン・赤', 'logo_red'], 
             ['「うさぎや」ロゴデザイン・青', 'logo_blue'], 
             ['うさぎ柄・ピンク', 'rabbit_pink']], 
            { selected: @order.wrapping_type }, 
            { id: 'order_wrapping_type', class: 'form-select' } %>
            <% if @order.errors[:wrapping_type].any? || @order.errors[:wrapping].any? %>
            <span class="error-message"><%= @order.errors[:wrapping_type].first || @order.errors[:wrapping].first %></span>
            <% end %>
        </div>

        <!-- ご希望欄 -->
        <div class="form-group">
            <label class="form-label">ご希望欄</label>
            <%= f.text_area :notes, class: 'form-textarea', placeholder: '・つぶあん、チョコ、メープルを2個ずつ
・熨斗あり、名前は「山田」でお願いします
・手提げ袋必要です' %>
            <p class="form-note">
                ※もちパイは組み合わせができますので、種類と個数をご記入ください。（ご記入がない場合はおまかせとなります）<br>
                ※種類は、「つぶあん」、「刻み栗あん」、「ごまあん」、「チョコ」、「メープル」、「コーヒー」、「かぼちゃ」、「さつまいも」となります。<br>
                ※包装の場合、熨斗の有無（お名前の記入）もあればご記入ください。<br>
                ※手提げ袋が必要な方はご記入ください。
            </p>
        </div>

        <%= f.submit '注文を確定する', class: 'submit-button' %>
        <% end %>
    </div>
</div>


<script>
    // フォームの初期化関数
    function initializeOrderForm() {
        // 合計金額の計算
        const quantityInputs = document.querySelectorAll('.quantity-input');
        const totalAmount = document.getElementById('total-amount');

        if (!quantityInputs.length || !totalAmount) {
            console.warn('注文フォームの要素が見つかりません');
            return;
        }

        function calculateTotal() {
            let total = 0;
            quantityInputs.forEach(input => {
                const quantity = parseInt(input.value) || 0;
                const price = parseInt(input.dataset.price) || 0;
                total += quantity * price;
            });
            totalAmount.textContent = '¥' + total.toLocaleString();
        }

        // ページロード時に合計を計算
        calculateTotal();

        // 各入力フィールドにイベントリスナーを追加
        quantityInputs.forEach(input => {
            // 既存のイベントリスナーを削除してから追加（重複防止）
            input.removeEventListener('input', calculateTotal);
            input.removeEventListener('change', calculateTotal);

            input.addEventListener('input', calculateTotal);
            input.addEventListener('change', calculateTotal);
        });

        // 送り先選択の切り替え
        const shippingSame = document.getElementById('shipping_same');
        const shippingDifferent = document.getElementById('shipping_different');
        const shippingFields = document.getElementById('shipping-address-fields');

        function toggleShippingFields() {
            if (shippingDifferent && shippingDifferent.checked) {
                shippingFields.classList.add('active');
            } else {
                shippingFields.classList.remove('active');
            }
        }

        if (shippingFields) {
            // ページロード時に状態を確認して表示
            toggleShippingFields();

            if (shippingSame) {
                shippingSame.removeEventListener('change', toggleShippingFields);
                shippingSame.addEventListener('change', toggleShippingFields);
            }
            if (shippingDifferent) {
                shippingDifferent.removeEventListener('change', toggleShippingFields);
                shippingDifferent.addEventListener('change', toggleShippingFields);
            }
        }

        // 注文フォームへのスムーススクロール
        const orderButton = document.querySelector('.order-button');
        if (orderButton) {
            orderButton.addEventListener('click', function(e) {
                e.preventDefault();
                const orderForm = document.getElementById('order-form');
                if (orderForm) {
                    const headerOffset = 100;
                    const elementPosition = orderForm.getBoundingClientRect().top;
                    const offsetPosition = elementPosition + window.pageYOffset - headerOffset;

                    window.scrollTo({
                        top: offsetPosition,
                        behavior: 'smooth'
                    });
                }
            });
        }
    }

    // DOMContentLoadedイベントで初期化
    if (document.readyState === 'loading') {
        document.addEventListener('DOMContentLoaded', initializeOrderForm);
    } else {
        // DOMが既に読み込まれている場合は即座に実行
        initializeOrderForm();
    }

    // Turbolinks/Turbo対応
    if (typeof Turbo !== 'undefined') {
        document.addEventListener('turbo:load', initializeOrderForm);
    } else {
        // Turbolinksの古いバージョン対応
        document.addEventListener('turbolinks:load', initializeOrderForm);
    }
</script>